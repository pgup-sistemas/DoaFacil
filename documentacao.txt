# ✅ **DoaFácil – Sistema Completo de Arrecadações com Flask + Bulma**

## 🧱 **Stack Tecnológico**

* **Backend**: Python 3.10+ + Flask
* **Frontend**: HTML + **Bulma CSS** (leve, mobile-first, sem JS obrigatório)
* **Banco de Dados**: SQLite (local) ou PostgreSQL (produção)
* **ORM**: SQLAlchemy
* **Templates**: Jinja2 (nativo do Flask)
* **Formulários**: WTForms
* **API**: Flask-RESTful
* **Email**: Flask-Mail
* **PDF**: WeasyPrint
* **Excel**: openpyxl
* **QR Code**: qrcode
* **CEP**: ViaCEP API

---

## 🔐 **Sistema de Administração de Usuários**

### **Tipos de Administradores:**

1. **Administrador Principal**
   - Acesso total ao sistema
   - Pode gerenciar todos os usuários
   - Pode criar e gerenciar todas as unidades
   - Pode visualizar todas as listas e doações
   - Acesso ao dashboard completo
   - Pode excluir listas permanentemente

2. **Administrador de Unidade**
   - Acesso limitado às suas unidades
   - Pode criar listas apenas para suas unidades
   - Pode gerenciar itens e visualizar doações de suas listas
   - Não tem acesso ao gerenciamento de usuários
   - Pode gerenciar sugestões de suas listas

### **Funcionalidades de Gerenciamento:**

- **Criar Usuários**: Apenas admin principal pode criar novos usuários
- **Editar Usuários**: Modificar dados, senhas e status
- **Ativar/Desativar**: Controle de acesso por usuário
- **Definir Roles**: Escolher entre admin principal ou admin de unidade
- **Permissões Automáticas**: Sistema verifica permissões em todas as operações
- **Paginação**: 15 usuários por página

---

## 📋 **Funcionalidades do Sistema**

### 1. **Cadastro de Unidades Organizadas**
   - **Objetivo**: Permitir que administradores criem e gerenciem unidades organizadoras
   - **Campos Básicos**: Nome da Unidade, Razão Social, Nome Fantasia, Responsável
   - **Dados Legais**: CNPJ, Tipo de Organização, Data de Fundação, Registro de Inscrição
   - **Endereço Completo**: CEP (com consulta automática), Logradouro, Número, Complemento, Bairro, Cidade, Estado
   - **Contatos**: Email Principal/Secundário, Telefone Fixo, WhatsApp, Horário de Funcionamento
   - **Presença Digital**: Website, Facebook, Instagram, LinkedIn, YouTube
   - **Dados para Relatórios**: Categoria, Público-Alvo, Área de Atuação, Tamanho da Organização
   - **Coordenadas**: Latitude e Longitude para integração com mapas
   - **Gerenciamento**: Múltiplas unidades para diferentes campanhas
   - **Restrição**: Apenas administradores podem cadastrar unidades

### 2. **Criação de Listas de Arrecadação**
   - O administrador pode criar listas de arrecadação
   - Cada lista gerada terá um link único que pode ser compartilhado
   - **Modo de lista**:
     - Aberto: Doadores podem sugerir itens
     - Fechado: O administrador define os itens e as quantidades necessárias
   - **Configuração PIX**: Chave PIX com geração automática de QR Code
   - **Tokens Administrativos**: Links únicos para acesso administrativo
   - **Restrição**: Apenas admin da unidade ou admin principal pode criar listas

### 3. **Sistema de Sugestões**
   - **Sugestões de Itens**: Para listas em modo aberto
   - **Interface de Gerenciamento**: Com paginação (12 por página)
   - **Aprovação/Rejeição**: Com notificações e histórico
   - **Dados da Sugestão**: Nome, quantidade, unidade de medida, descrição, sugestor
   - **Restrição**: Apenas admin da lista pode gerenciar sugestões

### 4. **Doações**
   - **Doação de Itens**: O doador escolhe o item e a quantidade
   - **Doação de Dinheiro**: Via chave Pix com QR Code
   - **Sistema de Doadores**: Busca por CPF, email ou telefone
   - **Endereço Completo**: CEP automático, logradouro, número, complemento, bairro, cidade, estado
   - **Observações**: Campo para observações personalizadas
   - O sistema atualiza o progresso de cada item
   - **Acesso**: Público - qualquer pessoa pode doar

### 5. **Notificações e Alertas**
   - **Notificação de Arrecadação**: Administrador recebe notificação por e-mail
   - **Notificação de Meta Atingida**: Doadores recebem agradecimento
   - **Configuração SMTP**: Flexível para diferentes provedores
   - **Templates de Email**: Personalizáveis

### 6. **Dashboard do Administrador**
   - **Interface Moderna**: Design responsivo com Bulma CSS
   - **Estatísticas em Tempo Real**: Cards informativos com métricas
   - **Paginação Completa**: Em todas as listas e tabelas
   - **Filtros Avançados**: Por categoria, estado, tipo e status
   - **Ações Rápidas**: Acesso direto às principais funcionalidades
   - **Gráficos de Progresso**: Informações detalhadas
   - **Exportação de Dados**: CSV, PDF ou Excel
   - **Diferenciação por tipo de admin**:
     - Admin principal: Vê todas as unidades e usuários
     - Admin de unidade: Vê apenas suas unidades

### 7. **API RESTful**
   - **Endpoints para Listas**: Status, doações, criação
   - **Endpoints para Unidades**: Listagem, detalhes
   - **Endpoints Utilitários**: Consulta CEP, QR Code PIX, busca doadores
   - **Segurança**: Via tokens JWT ou API Keys
   - **Documentação**: Endpoints bem documentados

### 8. **Exportação de Dados**
   - **CSV**: Para análise em planilhas
   - **PDF**: Para relatórios formais com formatação profissional
   - **Excel**: Para relatórios completos com formatação avançada
   - **Dados Completos**: Incluindo informações da unidade

### 9. **Interface Moderna e Responsiva**
   - **Design Bulma CSS**: Componentes modernos e responsivos
   - **Mobile-First**: Otimizado para dispositivos móveis
   - **Animações Suaves**: Transições e hover effects
   - **Ícones FontAwesome**: Para melhor experiência do usuário
   - **Temas Consistentes**: Em todo o sistema

---

## 📁 **Estrutura do Projeto**

```
listArrecadacao/
│
├── app/
│   ├── __init__.py
│   ├── routes.py
│   ├── models.py
│   ├── forms.py
│   ├── utils.py
│   ├── api.py
│   └── templates/
│       ├── base.html
│       ├── index.html
│       ├── cadastrar_unidade.html
│       ├── editar_unidade.html
│       ├── criar_lista.html
│       ├── editar_lista.html
│       ├── adicionar_itens.html
│       ├── adicionar_itens_lista.html
│       ├── editar_item.html
│       ├── visualizar_lista.html
│       ├── doar_pagina.html
│       ├── agradecimento_doacao.html
│       ├── dashboard.html
│       ├── gerenciar_sugestoes.html
│       ├── admin/
│       │   ├── dashboard.html
│       │   ├── login.html
│       │   ├── usuarios.html
│       │   ├── criar_usuario.html
│       │   ├── editar_usuario.html
│       │   ├── listas_ativas.html
│       │   ├── listas_concluidas.html
│       │   └── listas_unidade.html
│       └── export/
│           └── pdf_lista.html
│
├── config.py
├── run.py
├── create_admin.py
├── create_test_data.py
├── requirements.txt
└── README.md
```

---

## 🔐 **Entidades e Relacionamentos**

### ✅ Administrador
* `id`, `username`, `email`, `nome`, `password_hash`, `role`, `ativo`, `data_criacao`
* **Roles**: `admin_principal` ou `admin_unidade`
* 1:N com UnidadeOrganizadora (para admin_unidade)

### ✅ UnidadeOrganizadora
* `id`, `nome`, `razao_social`, `nome_fantasia`, `responsavel`, `email`, `email_secundario`, `descricao`
* `cnpj`, `tipo_organizacao`, `data_fundacao`, `registro_inscricao`
* `cep`, `logradouro`, `numero`, `complemento`, `bairro`, `cidade`, `estado`
* `telefone_fixo`, `whatsapp_numero`, `horario_funcionamento`, `dias_funcionamento`
* `website_url`, `facebook_url`, `instagram_url`, `linkedin_url`, `youtube_url`
* `categoria`, `publico_alvo`, `area_atuacao`, `tamanho_organizacao`
* `coordenadas_lat`, `coordenadas_lng`, `ativo`, `admin_id`, `data_criacao`
* N:1 com Administrador (admin responsável)
* 1:N com Listas

### ✅ Lista
* `id`, `nome`, `descricao`, `modo`, `aceita_pix`, `chave_pix`, `slug`, `token_admin`, `ativa`, `concluida`, `cancelada`, `motivo_cancelamento`, `data_conclusao`, `unidade_id`, `data_criacao`
* 1:N com Itens
* 1:N com SugestaoItem

### ✅ Item
* `id`, `nome`, `quantidade_necessaria`, `unidade_medida`, `descricao`, `lista_id`
* 1:N com Doacoes

### ✅ Doacao
* `id`, `doador_nome`, `quantidade`, `observacao`, `tipo_pagamento`, `valor_dinheiro`, `item_id`, `data_doacao`

### ✅ Doador
* `id`, `nome`, `cpf`, `cep`, `logradouro`, `numero`, `complemento`, `bairro`, `cidade`, `estado`, `contato`, `data_cadastro`

### ✅ SugestaoItem
* `id`, `nome`, `quantidade_necessaria`, `unidade_medida`, `descricao`, `sugestor_nome`, `aprovada`, `lista_id`, `data_sugestao`

---

## 🌐 **Rotas Principais**

| Rota                                    | Método   | Descrição                                    | Acesso                    |
| --------------------------------------- | -------- | -------------------------------------------- | ------------------------- |
| `/`                                     | GET      | Página inicial                               | Público                   |
| `/admin/login`                          | GET/POST | Login de administrador                       | Público                   |
| `/admin/logout`                         | GET      | Logout de administrador                      | Admin logado              |
| `/admin/dashboard`                      | GET      | Dashboard principal                          | Admin logado              |
| `/admin/usuarios`                       | GET      | Gerenciar usuários                           | Admin principal           |
| `/admin/usuario/criar`                  | GET/POST | Criar novo usuário                           | Admin principal           |
| `/admin/usuario/<id>/editar`            | GET/POST | Editar usuário                               | Admin principal           |
| `/admin/listas-ativas`                  | GET      | Listas ativas                                | Admin logado              |
| `/admin/listas-concluidas`              | GET      | Listas concluídas                            | Admin logado              |
| `/admin/unidade/<id>/listas`            | GET      | Listas de uma unidade                        | Admin logado              |
| `/unidade/cadastrar`                    | GET/POST | Cadastrar nova unidade                       | Admin logado              |
| `/unidade/<id>/editar`                  | GET/POST | Editar unidade                               | Admin logado              |
| `/lista/criar/<unidade_id>`             | GET/POST | Criar lista para unidade                     | Admin da unidade          |
| `/lista/<lista_id>/itens`               | GET/POST | Adicionar itens à lista                      | Admin da lista            |
| `/lista/<slug>`                         | GET      | Página pública da lista                      | Público                   |
| `/lista/<slug>/doar`                    | POST     | Processar doação                             | Público                   |
| `/lista/<slug>/sugerir`                 | POST     | Sugerir item (listas abertas)                | Público                   |
| `/doar/<slug>/<item_id>`                | GET/POST | Página de doação específica                  | Público                   |
| `/doar/<slug>/obrigado`                 | GET      | Agradecimento após doação                    | Público                   |
| `/admin/<token>`                        | GET      | Dashboard de lista                           | Via token                 |
| `/admin/<token>/editar`                 | GET/POST | Editar lista                                 | Via token                 |
| `/admin/<token>/adicionar-itens`        | GET/POST | Adicionar itens à lista                      | Via token                 |
| `/admin/<token>/sugestoes`              | GET      | Gerenciar sugestões                          | Via token                 |
| `/admin/<token>/sugestao/<id>/aprovar`  | POST     | Aprovar sugestão                             | Via token                 |
| `/admin/<token>/sugestao/<id>/rejeitar` | POST     | Rejeitar sugestão                            | Via token                 |
| `/admin/<token>/item/<id>/editar`       | GET/POST | Editar item                                  | Via token                 |
| `/admin/<token>/item/<id>/excluir`      | POST     | Excluir item                                 | Via token                 |
| `/exportar/<slug>.csv`                  | GET      | Exportar lista em CSV                        | Público                   |
| `/exportar/<slug>.pdf`                  | GET      | Exportar lista em PDF                        | Público                   |
| `/exportar/<slug>.xlsx`                 | GET      | Exportar lista em Excel                      | Público                   |
| `/exportar/unidade/<id>.xlsx`           | GET      | Exportar unidade completa                    | Admin logado              |
| `/api/lista/<slug>/status`              | GET      | Status da lista (API)                        | Público                   |
| `/api/lista/<slug>/doar`                | POST     | Doação via API                               | Público                   |
| `/api/buscar-doador/<identificador>`    | GET      | Buscar doador                                | Público                   |
| `/api/gerar-qrcode-pix`                 | POST     | Gerar QR Code PIX                            | Público                   |
| `/api/consultar-cep/<cep>`              | GET      | Consultar CEP                                | Público                   |

---

## 🎯 **Funcionalidades-Chave**

### ✅ Sistema de Autenticação
* Login/logout de administradores
* Sessões seguras
* Verificação de permissões em todas as rotas
* Controle de acesso por tipo de usuário

### ✅ Gerenciamento de Usuários
* Criar, editar e desativar usuários
* Definir tipos de acesso (principal/unidade)
* Controle de senhas
* Interface administrativa completa
* Paginação (15 usuários por página)

### ✅ Criação de Unidade
* Página de cadastro completa com validação
* Dados legais, endereço, contatos, presença digital
* Consulta automática de CEP via ViaCEP
* Associação automática com admin de unidade
* Salva no banco e retorna dashboard

### ✅ Criação de Lista
* Escolher modo (fechado/aberto)
* Configurar Pix (opcional)
* Definir itens e quantidades
* Geração de links únicos
* Tokens administrativos

### ✅ Sistema de Sugestões
* Sugestões de itens para listas abertas
* Interface de gerenciamento com paginação
* Aprovação/rejeição com notificações
* Histórico completo de sugestões

### ✅ Página Pública da Lista
* Exibe itens com barras de progresso
* Formulário de doação
* Exibe chave Pix (se ativado)
* Design responsivo com Bulma
* Sistema de sugestões (listas abertas)

### ✅ Doações
* Validação de quantidades
* Sistema de doadores com busca
* Endereço completo com CEP automático
* Doações físicas e financeiras
* Integração PIX com QR Code
* Observações personalizadas

### ✅ Dashboard Administrativo
* Interface moderna e profissional
* Estatísticas em tempo real
* Paginação completa
* Filtros avançados
* Ações rápidas
* Navegação intuitiva

### ✅ Exportação de Dados
* Múltiplos formatos (CSV, PDF, Excel)
* Relatórios profissionais
* Dados completos das unidades
* Templates personalizados

### ✅ API REST
* Endpoints para listas e doações
* Consulta de CEP
* Geração de QR Code PIX
* Busca de doadores
* Documentação completa

### ✅ Sistema de Notificações
* Notificações por email
* Configuração SMTP flexível
* Templates personalizáveis
* Notificações toast na interface

---

## 🔧 **Funcionalidades Avançadas**

### Sistema de Paginação
- **Dashboard principal**: 10 unidades por página
- **Listas de unidade**: 15 listas por página
- **Sugestões**: 12 sugestões por página
- **Listas ativas/concluídas**: 10 listas por página
- **Usuários**: 15 usuários por página

### Filtros Avançados
- **Por categoria**: Religiosa, Social, Educacional, Saúde, Ambiental, Cultural, Esportiva
- **Por estado**: Todos os estados brasileiros
- **Por tipo**: Igreja, ONG, Associação, Empresa, Escola, Hospital, Orfanato, Asilo
- **Por status**: Ativa, Concluída, Cancelada

### Integração PIX
- **Geração automática** de QR Code
- **Validação de chaves** PIX
- **Interface intuitiva** para configuração
- **API para geração** de QR Codes

### Consulta de CEP
- **API ViaCEP** para consulta automática
- **Preenchimento automático** de endereços
- **Validação de formato** de CEP
- **Tratamento de erros** robusto

### Sistema de Endereços
- **Endereço completo** para unidades e doadores
- **Consulta automática** de CEP
- **Validação de dados** de endereço
- **Coordenadas geográficas** para mapas

---

## 🎨 **Interface e UX**

### Design Responsivo
- **Mobile-first** com Bulma CSS
- **Adaptável** para todos os dispositivos
- **Navegação intuitiva** com menus e breadcrumbs

### Componentes Modernos
- **Cards informativos** com estatísticas
- **Barras de progresso** visuais
- **Tags coloridas** para status
- **Botões com ícones** para melhor UX

### Animações e Transições
- **Hover effects** em cards e botões
- **Transições suaves** entre páginas
- **Notificações toast** para feedback

### Acessibilidade
- **Semântica HTML** correta
- **Contraste adequado** de cores
- **Navegação por teclado** suportada
- **Screen readers** compatíveis

---

## 🔒 **Segurança**

### Autenticação
- **Sessões seguras** com Flask-Session
- **Verificação de permissões** em todas as rotas
- **Controle de acesso** por tipo de usuário
- **Expiração automática** de sessões

### Validação de Dados
- **WTForms** para validação de formulários
- **Sanitização** de dados de entrada
- **Proteção CSRF** em todos os formulários
- **Validação de tipos** de dados

### Tokens de Acesso
- **Tokens únicos** para dashboards de lista
- **Validação de permissões** por token
- **Geração segura** de tokens
- **Controle de acesso** por token

### Proteção de Rotas
- **Decorators** para verificação de permissões
- **Controle de acesso** granular
- **Logs de acesso** para auditoria
- **Proteção contra** ataques comuns

---

## 🚀 **Deploy em Produção**

### Configurações Recomendadas
- **WSGI Server**: Gunicorn ou uWSGI
- **Proxy Reverso**: Nginx
- **Banco de Dados**: PostgreSQL
- **Email**: Serviço SMTP confiável
- **SSL**: Certificado válido

### Variáveis de Ambiente
```env
FLASK_ENV=production
DEBUG=False
SECRET_KEY=chave-super-secreta-e-complexa
DATABASE_URL=postgresql://usuario:senha@localhost/doafacil
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=seu-email@gmail.com
MAIL_PASSWORD=sua-senha-de-app
```

### Performance
- **Cache**: Redis para sessões
- **CDN**: Para assets estáticos
- **Compressão**: Gzip para respostas
- **Otimização**: Queries de banco otimizadas

---

## 📊 **Métricas e Analytics**

### Estatísticas Disponíveis
- **Total de unidades** cadastradas
- **Total de listas** criadas
- **Listas ativas/concluídas/canceladas**
- **Total de doações** realizadas
- **Doadores únicos** no sistema
- **Progresso** de cada lista
- **Itens completos** vs necessários

### Relatórios
- **Relatórios por unidade** com dados completos
- **Relatórios por lista** com progresso detalhado
- **Relatórios de doações** com histórico
- **Exportação** em múltiplos formatos

---

## 🔧 **Manutenção e Suporte**

### Backup
- **Backup automático** do banco de dados
- **Versionamento** de código
- **Documentação** atualizada
- **Scripts de migração** para atualizações

### Monitoramento
- **Logs de erro** detalhados
- **Monitoramento** de performance
- **Alertas** para problemas críticos
- **Métricas** de uso do sistema

### Atualizações
- **Migrações** de banco de dados
- **Scripts** de atualização
- **Compatibilidade** com versões anteriores
- **Documentação** de mudanças

---

## 📞 **Suporte e Contato**

### Desenvolvedor
- **Nome**: Oézios Normando
- **Empresa**: PageUp Sistemas
- **Email**: contato@pageup.com.br

### Documentação
- **README.md**: Guia completo de instalação e uso
- **documentacao.txt**: Documentação técnica detalhada
- **Comentários**: Código bem documentado
- **Exemplos**: Scripts de exemplo incluídos

---

## 🎯 **Status do Projeto**

### ✅ **100% IMPLEMENTADO**
- Todas as funcionalidades do plano original
- Funcionalidades extras para melhor UX
- Sistema completo e funcional
- Pronto para uso em produção

### 🚀 **Próximos Passos Sugeridos**
- Deploy em servidor de produção
- Configuração de domínio e SSL
- Backup automático do banco
- Monitoramento de performance
- Treinamento de usuários

---

**DoaFácil** - Sistema completo e profissional para gerenciamento de arrecadações! 🎯✨
